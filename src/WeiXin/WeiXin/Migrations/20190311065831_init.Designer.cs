// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeiXin.Repositories;

namespace WeiXin.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    [Migration("20190311065831_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WeiXin.Domain.WxFriends", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<int>("ContactFlag");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("HeadImgUrl");

                    b.Property<string>("NickName")
                        .HasMaxLength(500);

                    b.Property<string>("PYInitial");

                    b.Property<string>("PYQuanPin");

                    b.Property<string>("Province")
                        .HasMaxLength(8);

                    b.Property<string>("RemarkName")
                        .HasMaxLength(500);

                    b.Property<string>("RemarkPYInitial");

                    b.Property<string>("RemarkPYQuanPin");

                    b.Property<int>("Sex");

                    b.Property<string>("Signature")
                        .HasMaxLength(255);

                    b.Property<bool>("StarFriend");

                    b.Property<string>("Telephone")
                        .HasMaxLength(11);

                    b.Property<int>("Uin");

                    b.Property<string>("UserName")
                        .HasMaxLength(1000);

                    b.Property<string>("UserUin");

                    b.HasKey("Id");

                    b.HasIndex("UserUin");

                    b.ToTable("WxFriends");
                });

            modelBuilder.Entity("WeiXin.Domain.WxUserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Hosts")
                        .HasMaxLength(10);

                    b.Property<string>("UserUin");

                    b.Property<string>("WxKeysJson");

                    b.HasKey("Id");

                    b.HasIndex("UserUin")
                        .IsUnique();

                    b.ToTable("WxUserDetails");
                });

            modelBuilder.Entity("WeiXin.Domain.WxUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("HeadImgUrl");

                    b.Property<string>("NickName")
                        .HasMaxLength(500);

                    b.Property<string>("PYInitial");

                    b.Property<string>("PYQuanPin");

                    b.Property<int>("Sex");

                    b.Property<bool>("StarFriend");

                    b.Property<string>("Uin")
                        .IsRequired();

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UserName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("WxUsers");
                });

            modelBuilder.Entity("WeiXin.Domain.WxFriends", b =>
                {
                    b.HasOne("WeiXin.Domain.WxUsers", "User")
                        .WithMany("Friends")
                        .HasForeignKey("UserUin")
                        .HasPrincipalKey("Uin");
                });

            modelBuilder.Entity("WeiXin.Domain.WxUserDetails", b =>
                {
                    b.HasOne("WeiXin.Domain.WxUsers", "Users")
                        .WithOne("Detail")
                        .HasForeignKey("WeiXin.Domain.WxUserDetails", "UserUin")
                        .HasPrincipalKey("WeiXin.Domain.WxUsers", "Uin");
                });
#pragma warning restore 612, 618
        }
    }
}
